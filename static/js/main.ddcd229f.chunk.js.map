{"version":3,"sources":["Form/styled.js","Form/index.js","List/styled.js","List/index.js","Container/Buttons/styled.js","Container/Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","placeholder","value","onChange","target","Tasks","ul","Item","li","hidden","css","toggleDone","remove","Content","span","done","List","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","title","content","Wrapper","div","disabled","Buttons","toggleHideDone","markAllAsDone","deleteAll","length","every","StyledSection","section","Container","SubHeaderTitle","h2","Section","extraHeaderContent","body","Header","StyledContainer","main","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddcd229f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 10px;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: 2px solid #dddddd;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    border: none;\r\n    color: white;\r\n    background-color: hsl(180, 100%, 25%);\r\n    padding: 10px 15px;\r\n    transition: background-color 0.3s, transform 0.3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 27.5%);\r\n    }\r\n\r\n    &:active {\r\n        background-color: hsl(180, 100%, 30%);\r\n        transform: scale(1.05);\r\n    }\r\n`;","import React, { useState } from \"react\";\r\nimport { Button, Input, StyledForm } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if (trimmedNewTaskContent) {\r\n            addNewTask(trimmedNewTaskContent);\r\n            setNewTaskContent(\"\");\r\n        };\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                placeholder=\"What should I do today?\"\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)} />\r\n            <Button>Add task</Button>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Tasks = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 20px;\r\n    padding: 20px;\r\n    align-items: center;\r\n    border-bottom: 1px solid #dddddd;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    border: none;\r\n    line-height: 50%;\r\n    padding: 5px;\r\n    background-color: inherit;\r\n    color: teal;\r\n    transition: color 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        color: #fefefe;\r\n        background-color: teal;\r\n\r\n        &:hover {\r\n            background-color: hsl(180, 100%, 28%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        color: crimson;\r\n\r\n        &:hover {\r\n            color: red;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    overflow-wrap: anywhere;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n\r\n    @media (max-width: 767px) {\r\n        justify-self: center;\r\n    }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { Content, Item, Button, Tasks } from \"./styled\";\r\n\r\nconst List = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <Tasks>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone={task.done}\r\n                    onClick={() => toggleTaskDone(task.id)}>\r\n                    <FaCheck title=\"check mark\" />\r\n                </Button>\r\n                <Content\r\n                    done={task.done}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}>\r\n                    <FaTimes title=\"cross mark\" />\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </Tasks>\r\n);\r\n\r\nexport default List;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    @media (max-width: 767px) {\r\n        display: flex;\r\n        flex-direction: column; \r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    margin: 15px;\r\n    align-self: center;\r\n    cursor: pointer;\r\n    border: none;\r\n    color: teal;\r\n    background-color: inherit;\r\n    transition: color 0.2s;\r\n\r\n    &:hover {\r\n    color: hsl(180, 100%, 35%);\r\n    }\r\n\r\n    ${({ disabled }) => disabled && css`\r\n        color: #acacac;\r\n        cursor: default;\r\n\r\n        &:hover {\r\n            color: #acacac;\r\n        }\r\n    `}\r\n`;","import React from \"react\";\r\nimport { Wrapper, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, markAllAsDone, deleteAll }) => (\r\n    tasks.length > 0 && (\r\n        <Wrapper>\r\n            <Button\r\n                onClick={toggleHideDone}\r\n            >\r\n                {hideDone ? \"Show done tasks\" : \"Hide done tasks\"}\r\n            </Button>\r\n            <Button\r\n                onClick={markAllAsDone}\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                Mark all as done\r\n                </Button>\r\n            <Button\r\n                onClick={deleteAll}\r\n            >\r\n                Delete all\r\n            </Button>\r\n        </Wrapper>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: #ffffff;\r\n    box-shadow: 0 0 10px 0 #d3d2d2;\r\n    margin: 10px 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const SubHeaderTitle = styled.h2`\r\n    margin: 0;\r\n    padding: 25px;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 25px;\r\n    border-top: 3px solid #edecee;\r\n`;","import React from \"react\";\r\nimport { Container, StyledSection, SubHeaderTitle, Wrapper } from \"./styled\";\r\n\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n    <StyledSection>\r\n        <Container>\r\n            <SubHeaderTitle>\r\n                {title}\r\n            </SubHeaderTitle>\r\n            {extraHeaderContent}\r\n        </Container>\r\n        <Wrapper>\r\n            {body}\r\n        </Wrapper>\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    max-width: 1200px;\r\n    padding: 0 10px;\r\n    margin: 0 auto;\r\n`;","import React from \"react\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\nimport List from \"./List\";\r\nimport Buttons from \"./Container/Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\"\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\")) || [\r\n    { id: 1, content: \"test1\", done: true },\r\n    { id: 2, content: \"test2\", done: false },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks(tasks => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      }\r\n    ])\r\n  };\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if (task.id === id) {\r\n        return { ...task, done: !task.done }\r\n      }\r\n\r\n      return task;\r\n    }))\r\n  };\r\n\r\n  const markAllAsDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task,\r\n      done: true,\r\n    })));\r\n  };\r\n\r\n  const deleteAll = () => {\r\n    setTasks(tasks => tasks = []);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"To-do List\" />\r\n      <Section\r\n        title=\"Add new task\"\r\n        body={<Form addNewTask={addNewTask} />}\r\n      />\r\n      <Section\r\n        title=\"Task List\"\r\n        body={<List tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />}\r\n        extraHeaderContent={<Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} markAllAsDone={markAllAsDone} deleteAll={deleteAll} />}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}