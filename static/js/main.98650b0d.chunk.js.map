{"version":3,"sources":["Form/styled.js","Form/index.js","List/styled.js","List/index.js","Container/Buttons/styled.js","Container/Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","ref","placeholder","value","onChange","target","onClick","current","focus","Tasks","ul","Item","li","hidden","css","toggleDone","remove","Content","span","done","List","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","title","content","Wrapper","div","disabled","Buttons","toggleHideDone","markAllAsDone","deleteAll","length","every","StyledSection","section","Container","SubHeaderTitle","h2","Section","extraHeaderContent","body","Header","StyledContainer","main","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"igCAEO,IAAMA,EAAaC,IAAOC,KAAV,KAUVC,EAAQF,IAAOG,MAAV,KAKLC,EAASJ,IAAOK,OAAV,KCgBJC,EA9BF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACeC,mBAAS,IADxB,mBACtBC,EADsB,KACNC,EADM,KAEvBC,EAAWC,iBAAO,MAYxB,OACI,eAACb,EAAD,CAAYc,SAXK,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAwBP,EAAeQ,OAEzCD,IACAT,EAAWS,GACXN,EAAkB,MAKtB,UACI,cAACR,EAAD,CACIgB,IAAKP,EACLQ,YAAY,0BACZC,MAAOX,EACPY,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAAkBY,EAAOF,UACvD,cAAChB,EAAD,CACImB,QAAS,kBAAMZ,EAASa,QAAQC,SADpC,0B,s4CCtBL,IAAMC,EAAQ1B,IAAO2B,GAAV,KAMLC,EAAO5B,IAAO6B,GAAV,KAQX,qBAAGC,QAAuBC,YAAJ,QAKf3B,EAASJ,IAAOK,OAAV,KASb,qBAAG2B,YAA+BD,YAAJ,QAS9B,qBAAGE,QAAuBF,YAAJ,QASfG,EAAUlC,IAAOmC,KAAV,KAGd,qBAAGC,MAAmBL,YAAJ,QCrBTM,EA1BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,eAAhC,OACT,cAACf,EAAD,UACKY,EAAMI,KAAI,SAAAC,GAAI,OACX,eAACf,EAAD,CAEIE,OAAQa,EAAKP,MAAQG,EAFzB,UAII,cAAC,EAAD,CACIP,WAAYW,EAAKP,KACjBb,QAAS,kBAAMkB,EAAeE,EAAKC,KAFvC,SAGI,cAAC,IAAD,CAASC,MAAM,iBAEnB,cAACX,EAAD,CACIE,KAAMO,EAAKP,KADf,SAEKO,EAAKG,UAEV,cAAC,EAAD,CACIb,QAAM,EACNV,QAAS,kBAAMiB,EAAWG,EAAKC,KAFnC,SAGI,cAAC,IAAD,CAASC,MAAM,mBAfdF,EAAKC,U,mpBCNnB,IAAMG,EAAU/C,IAAOgD,IAAV,KAOP5C,EAASJ,IAAOK,OAAV,KAab,qBAAG4C,UAA2BlB,YAAJ,QCIjBmB,EAvBC,SAAC,GAAD,IAAGZ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUY,EAApB,EAAoBA,eAAgBC,EAApC,EAAoCA,cAAeC,EAAnD,EAAmDA,UAAnD,OACZf,EAAMgB,OAAS,GACX,eAACP,EAAD,WACI,cAAC,EAAD,CACIxB,QAAS4B,EADb,SAGKZ,EAAW,kBAAoB,oBAEpC,cAAC,EAAD,CACIhB,QAAS6B,EACTH,SAAUX,EAAMiB,OAAM,qBAAGnB,QAF7B,8BAMA,cAAC,EAAD,CACIb,QAAS8B,EADb,4B,2pBCfL,IAAMG,EAAgBxD,IAAOyD,QAAV,KAMbC,EAAY1D,IAAOgD,IAAV,KAWTW,EAAiB3D,IAAO4D,GAAV,KAKdb,EAAU/C,IAAOgD,IAAV,KCNLa,EAdC,SAAC,GAAD,IAAGhB,EAAH,EAAGA,MAAOiB,EAAV,EAAUA,mBAAoBC,EAA9B,EAA8BA,KAA9B,OACZ,eAACP,EAAD,WACI,eAAC,EAAD,WACI,cAACG,EAAD,UACKd,IAEJiB,KAEL,cAAC,EAAD,UACKC,QCLEC,EANA,SAAC,GAAD,IAAEnB,EAAF,EAAEA,MAAF,OACX,iCACI,6BAAKA,O,0ICFN,IAAMoB,EAAkBjE,IAAOkE,KAAV,KCObR,EANG,SAAC,GAAD,IAAGS,EAAH,EAAGA,SAAH,OACd,cAACF,EAAD,UACKE,KCoCMC,MAhCf,WAAgB,IAAD,EACmB5D,oBAAS,GAD5B,mBACN+B,EADM,KACI8B,EADJ,OCPS,WAAO,IAAD,EACA7D,mBAAS8D,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,CAC5E,CAAE7B,GAAI,EAAGE,QAAS,QAASV,MAAM,GACjC,CAAEQ,GAAI,EAAGE,QAAS,QAASV,MAAM,KAHX,mBACnBE,EADmB,KACZoC,EADY,KA8C1B,OAxCAC,qBAAU,WACNH,aAAaI,QAAQ,QAASN,KAAKO,UAAUvC,MAC9C,CAACA,IAsCG,CACHA,QACAE,WA3Be,SAACI,GAChB8B,GAAS,SAAApC,GAAK,OAAIA,EAAMwC,QAAO,SAAAnC,GAAI,OAAIA,EAAKC,KAAOA,SA2BnDH,eAxBmB,SAACG,GACpB8B,GAAS,SAAApC,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GACxB,OAAIA,EAAKC,KAAOA,EACL,2BAAKD,GAAZ,IAAkBP,MAAOO,EAAKP,OAG3BO,SAmBXS,cAfkB,WAClBsB,GAAS,SAAApC,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAAI,kCACzBA,GADyB,IAE5BP,MAAM,WAaV7B,WAzCe,SAACuC,GAChB4B,GAAS,SAAApC,GAAK,4BACPA,GADO,CAEV,CACIQ,UACAV,MAAM,EACNQ,GAAIN,EAAMgB,OAAShB,EAAMA,EAAMgB,OAAS,GAAGV,GAAK,EAAI,SAoC5DS,UAVc,WACdqB,GAAS,SAAApC,GAAK,MAAY,QDtB5ByC,GANFzC,EARW,EAQXA,MACAE,EATW,EASXA,WACAC,EAVW,EAUXA,eACAW,EAXW,EAWXA,cACA7C,EAZW,EAYXA,WACA8C,EAbW,EAaXA,UAGF,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQR,MAAM,eACd,cAAC,EAAD,CACEA,MAAM,eACNkB,KAAM,cAAC,EAAD,CAAMxD,WAAYA,MAE1B,cAAC,EAAD,CACEsC,MAAM,YACNkB,KAAM,cAAC,EAAD,CAAMzB,MAAOA,EAAOC,SAAUA,EAAUC,WAAYA,EAAYC,eAAgBA,IACtFqB,mBAAoB,cAAC,EAAD,CAASxB,MAAOA,EAAOC,SAAUA,EAAUY,eAvB9C,WACrBkB,GAAY,SAAA9B,GAAQ,OAAKA,MAsB0Ea,cAAeA,EAAeC,UAAWA,UEvBjI2B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.98650b0d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 10px;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: 2px solid #dddddd;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    border: none;\r\n    color: white;\r\n    background-color: hsl(180, 100%, 25%);\r\n    padding: 10px 15px;\r\n    transition: background-color 0.3s, transform 0.3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 27.5%);\r\n    }\r\n\r\n    &:active {\r\n        background-color: hsl(180, 100%, 30%);\r\n        transform: scale(1.05);\r\n    }\r\n`;","import React, { useState, useRef } from \"react\";\r\nimport { Button, Input, StyledForm } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null)\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if (trimmedNewTaskContent) {\r\n            addNewTask(trimmedNewTaskContent);\r\n            setNewTaskContent(\"\");\r\n        };\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                ref={inputRef}\r\n                placeholder=\"What should I do today?\"\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)} />\r\n            <Button\r\n                onClick={() => inputRef.current.focus()}\r\n            >\r\n                Add task\r\n            </Button>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Tasks = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 20px;\r\n    padding: 20px;\r\n    align-items: center;\r\n    border-bottom: 1px solid #dddddd;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    border: none;\r\n    line-height: 50%;\r\n    padding: 5px;\r\n    background-color: inherit;\r\n    color: teal;\r\n    transition: color 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        color: #fefefe;\r\n        background-color: teal;\r\n\r\n        &:hover {\r\n            background-color: hsl(180, 100%, 28%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        color: crimson;\r\n\r\n        &:hover {\r\n            color: red;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    overflow-wrap: anywhere;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n\r\n    @media (max-width: 767px) {\r\n        justify-self: center;\r\n    }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { Content, Item, Button, Tasks } from \"./styled\";\r\n\r\nconst List = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <Tasks>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone={task.done}\r\n                    onClick={() => toggleTaskDone(task.id)}>\r\n                    <FaCheck title=\"check mark\" />\r\n                </Button>\r\n                <Content\r\n                    done={task.done}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}>\r\n                    <FaTimes title=\"cross mark\" />\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </Tasks>\r\n);\r\n\r\nexport default List;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    @media (max-width: 767px) {\r\n        display: flex;\r\n        flex-direction: column; \r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    margin: 15px;\r\n    align-self: center;\r\n    cursor: pointer;\r\n    border: none;\r\n    color: teal;\r\n    background-color: inherit;\r\n    transition: color 0.2s;\r\n\r\n    &:hover {\r\n    color: hsl(180, 100%, 35%);\r\n    }\r\n\r\n    ${({ disabled }) => disabled && css`\r\n        color: #acacac;\r\n        cursor: default;\r\n\r\n        &:hover {\r\n            color: #acacac;\r\n        }\r\n    `}\r\n`;","import React from \"react\";\r\nimport { Wrapper, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, markAllAsDone, deleteAll }) => (\r\n    tasks.length > 0 && (\r\n        <Wrapper>\r\n            <Button\r\n                onClick={toggleHideDone}\r\n            >\r\n                {hideDone ? \"Show done tasks\" : \"Hide done tasks\"}\r\n            </Button>\r\n            <Button\r\n                onClick={markAllAsDone}\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                Mark all as done\r\n                </Button>\r\n            <Button\r\n                onClick={deleteAll}\r\n            >\r\n                Delete all\r\n            </Button>\r\n        </Wrapper>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: #ffffff;\r\n    box-shadow: 0 0 10px 0 #d3d2d2;\r\n    margin: 10px 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const SubHeaderTitle = styled.h2`\r\n    margin: 0;\r\n    padding: 25px;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 25px;\r\n    border-top: 3px solid #edecee;\r\n`;","import React from \"react\";\r\nimport { Container, StyledSection, SubHeaderTitle, Wrapper } from \"./styled\";\r\n\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n    <StyledSection>\r\n        <Container>\r\n            <SubHeaderTitle>\r\n                {title}\r\n            </SubHeaderTitle>\r\n            {extraHeaderContent}\r\n        </Container>\r\n        <Wrapper>\r\n            {body}\r\n        </Wrapper>\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    max-width: 1200px;\r\n    padding: 0 10px;\r\n    margin: 0 auto;\r\n`;","import React from \"react\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import React, { useState } from \"react\";\r\nimport { useTasks } from \"./useTasks\";\r\nimport Form from \"./Form\";\r\nimport List from \"./List\";\r\nimport Buttons from \"./Container/Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\"\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    markAllAsDone,\r\n    addNewTask,\r\n    deleteAll,\r\n  } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"To-do List\" />\r\n      <Section\r\n        title=\"Add new task\"\r\n        body={<Form addNewTask={addNewTask} />}\r\n      />\r\n      <Section\r\n        title=\"Task List\"\r\n        body={<List tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />}\r\n        extraHeaderContent={<Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} markAllAsDone={markAllAsDone} deleteAll={deleteAll} />}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\")) || [\r\n        { id: 1, content: \"test1\", done: true },\r\n        { id: 2, content: \"test2\", done: false },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            }\r\n        ])\r\n    };\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done }\r\n            }\r\n\r\n            return task;\r\n        }))\r\n    };\r\n\r\n    const markAllAsDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const deleteAll = () => {\r\n        setTasks(tasks => tasks = []);\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        markAllAsDone,\r\n        addNewTask,\r\n        deleteAll,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}