{"version":3,"sources":["useTasks.js","useLocalStorage.js","Form/styled.js","Form/index.js","List/styled.js","List/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["useTasks","keyName","initialValue","useState","localStorageState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","useLocalStorage","id","content","done","tasks","setTasks","removeTask","filter","task","toggleTaskDone","map","markAllAsDone","addNewTask","length","deleteAll","StyledForm","styled","form","theme","breakpoints","mobile","Input","input","colors","borderColor","Button","button","main","Form","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","current","focus","ref","placeholder","value","onChange","target","Tasks","ul","Item","li","hidden","css","toggleDone","remove","Content","span","List","hideDone","onClick","title","Wrapper","div","disabled","Buttons","toggleHideDone","every","StyledSection","section","backgroundPrimary","Container","SubHeaderTitle","h2","Section","extraHeaderContent","body","Header","StyledContainer","children","App","setHideDone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","backgroundSecondary","document","getElementById"],"mappings":"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","file":"static/js/main.b3d52199.chunk.js","sourcesContent":["import { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useLocalStorage(\"tasks\", [\r\n        { id: 1, content: \"test1\", done: true },\r\n        { id: 2, content: \"test2\", done: false },\r\n    ])\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            }\r\n        ])\r\n    };\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done }\r\n            }\r\n\r\n            return task;\r\n        }))\r\n    };\r\n\r\n    const markAllAsDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const deleteAll = () => {\r\n        setTasks(tasks => tasks = []);\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        markAllAsDone,\r\n        addNewTask,\r\n        deleteAll,\r\n    };\r\n};","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorage = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(keyName);\r\n        if (localStorageState === null) {\r\n            return initialValue;\r\n        }\r\n\r\n        return JSON.parse(localStorageState);\r\n    };\r\n\r\n    const [state, setState] = useState(getInitialState)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n    }, [keyName, state]);\r\n\r\n    return [\r\n        state,\r\n        setState,\r\n    ];\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: 2px solid ${({ theme }) => theme.colors.borderColor};\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    border: none;\r\n    color: white;\r\n    background-color: ${({ theme }) => theme.colors.main};;\r\n    padding: 10px 15px;\r\n    transition: filter 0.3s, transform 0.3s;\r\n\r\n    &:hover {\r\n        filter: opacity(0.9);\r\n    }\r\n\r\n    &:active {\r\n        filter: opacity(0.8);\r\n        transform: scale(1.05);\r\n    }\r\n`;","import React, { useState, useRef } from \"react\";\r\nimport { Button, Input, StyledForm } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null)\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if (trimmedNewTaskContent) {\r\n            addNewTask(trimmedNewTaskContent);\r\n            setNewTaskContent(\"\");\r\n            inputRef.current.focus()\r\n        };\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                ref={inputRef}\r\n                placeholder=\"What should I do today?\"\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)} />\r\n            <Button>\r\n                Add task\r\n            </Button>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Tasks = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 20px;\r\n    padding: 20px;\r\n    align-items: center;\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    border: none;\r\n    line-height: 50%;\r\n    padding: 5px;\r\n    background-color: inherit;\r\n    color: ${({ theme }) => theme.colors.main};\r\n    transition: color 0.2s, filter 0.2s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        color: #fefefe;\r\n        background-color: ${({ theme }) => theme.colors.main};\r\n\r\n        &:hover {\r\n        filter: opacity(0.9)\r\n        }\r\n    `};\r\n\r\n    ${({ remove }) => remove && css`\r\n        color: crimson;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    overflow-wrap: anywhere;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        justify-self: center;\r\n    }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { Content, Item, Button, Tasks } from \"./styled\";\r\n\r\nconst List = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <Tasks>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone={task.done}\r\n                    onClick={() => toggleTaskDone(task.id)}>\r\n                    <FaCheck title=\"check mark\" />\r\n                </Button>\r\n                <Content\r\n                    done={task.done}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}>\r\n                    <FaTimes title=\"cross mark\" />\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </Tasks>\r\n);\r\n\r\nexport default List;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        display: flex;\r\n        flex-direction: column; \r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    margin: 15px;\r\n    align-self: center;\r\n    cursor: pointer;\r\n    border: none;\r\n    color: teal;\r\n    background-color: inherit;\r\n    transition: color 0.2s;\r\n\r\n    ${({ disabled }) => disabled && css`\r\n        color: #acacac;\r\n        cursor: default;\r\n    `}\r\n`;","import React from \"react\";\r\nimport { Wrapper, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, markAllAsDone, deleteAll }) => (\r\n    tasks.length > 0 && (\r\n        <Wrapper>\r\n            <Button\r\n                onClick={toggleHideDone}\r\n            >\r\n                {hideDone ? \"Show done tasks\" : \"Hide done tasks\"}\r\n            </Button>\r\n            <Button\r\n                onClick={markAllAsDone}\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                Mark all as done\r\n                </Button>\r\n            <Button\r\n                onClick={deleteAll}\r\n            >\r\n                Delete all\r\n            </Button>\r\n        </Wrapper>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: ${({theme}) => theme.colors.backgroundPrimary};;\r\n    box-shadow: 0 0 10px 0 #d3d2d2;\r\n    margin: 10px 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const SubHeaderTitle = styled.h2`\r\n    margin: 0;\r\n    padding: 25px;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 25px;\r\n    border-top: 3px solid ${({theme}) => theme.colors.borderColor};;\r\n`;","import React from \"react\";\r\nimport { Container, StyledSection, SubHeaderTitle, Wrapper } from \"./styled\";\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n    <StyledSection>\r\n        <Container>\r\n            <SubHeaderTitle>\r\n                {title}\r\n            </SubHeaderTitle>\r\n            {extraHeaderContent}\r\n        </Container>\r\n        <Wrapper>\r\n            {body}\r\n        </Wrapper>\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    max-width: 1200px;\r\n    padding: 0 10px;\r\n    margin: 0 auto;\r\n`;","import React from \"react\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import React, { useState } from \"react\";\r\nimport { useTasks } from \"./useTasks\";\r\nimport Form from \"./Form\";\r\nimport List from \"./List\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\"\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    markAllAsDone,\r\n    addNewTask,\r\n    deleteAll,\r\n  } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"To-do List\" />\r\n      <Section\r\n        title=\"Add new task\"\r\n        body={<Form addNewTask={addNewTask} />}\r\n      />\r\n      <Section\r\n        title=\"Task List\"\r\n        body={<List tasks={tasks}\r\n          hideDone={hideDone}\r\n          removeTask={removeTask}\r\n          toggleTaskDone={toggleTaskDone}\r\n        />}\r\n\r\n        extraHeaderContent={<Buttons\r\n          tasks={tasks}\r\n          hideDone={hideDone}\r\n          toggleHideDone={toggleHideDone}\r\n          markAllAsDone={markAllAsDone}\r\n          deleteAll={deleteAll}\r\n        />}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *,\r\n    *::before,\r\n    *::after {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Montserrat', sans-serif;\r\n        background: #EEEEEE;\r\n    }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors: {\r\n        main: \"hsl(180, 100%, 25%)\",\r\n        backgroundPrimary: \"hsl(0, 0%, 100%)\",\r\n        backgroundSecondary: \"hsl(0, 0%, 93%)\",\r\n        borderColor: \"hsl(270, 6%, 93%)\",\r\n    },\r\n\r\n    breakpoints: {\r\n        mobile: 767,\r\n    },\r\n};"],"sourceRoot":""}